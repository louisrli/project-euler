/* Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms. */

// Conditions 
// 1. Terms are less than four million (unsigned int)
// 2. Even terms only

#include <iostream>
using namespace std;

typedef unsigned long long ull;

// prototypes
int fibonacci_4m(ull first, ull second, ull currentSum);

int main() {
	ull solution = fibonacci_4m(1, 2, 0);
	cout << solution << endl;
}

int fibonacci_4m(ull first, ull second, ull currentSum) {
	// Return if the most recent term is greater than 4m
	if (first > 4000000)
		return currentSum;
		
	// Add the first trailing term, if even, to the currentSum
	if (!(first & 1))
		currentSum += first;

	return fibonacci_4m(second, first + second, currentSum);
}